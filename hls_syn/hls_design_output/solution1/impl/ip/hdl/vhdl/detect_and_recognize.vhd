-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect_and_recognize is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    frame_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_0_EN_A : OUT STD_LOGIC;
    frame_0_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_0_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_0_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_0_Clk_A : OUT STD_LOGIC;
    frame_0_Rst_A : OUT STD_LOGIC;
    frame_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_1_EN_A : OUT STD_LOGIC;
    frame_1_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_1_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_1_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_1_Clk_A : OUT STD_LOGIC;
    frame_1_Rst_A : OUT STD_LOGIC;
    frame_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_2_EN_A : OUT STD_LOGIC;
    frame_2_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_2_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_2_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_2_Clk_A : OUT STD_LOGIC;
    frame_2_Rst_A : OUT STD_LOGIC;
    frame_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_3_EN_A : OUT STD_LOGIC;
    frame_3_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_3_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_3_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_3_Clk_A : OUT STD_LOGIC;
    frame_3_Rst_A : OUT STD_LOGIC;
    frame_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_4_EN_A : OUT STD_LOGIC;
    frame_4_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_4_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_4_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_4_Clk_A : OUT STD_LOGIC;
    frame_4_Rst_A : OUT STD_LOGIC;
    frame_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_5_EN_A : OUT STD_LOGIC;
    frame_5_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_5_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_5_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_5_Clk_A : OUT STD_LOGIC;
    frame_5_Rst_A : OUT STD_LOGIC;
    frame_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_6_EN_A : OUT STD_LOGIC;
    frame_6_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_6_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_6_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_6_Clk_A : OUT STD_LOGIC;
    frame_6_Rst_A : OUT STD_LOGIC;
    frame_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    frame_7_EN_A : OUT STD_LOGIC;
    frame_7_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
    frame_7_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_7_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_7_Clk_A : OUT STD_LOGIC;
    frame_7_Rst_A : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of detect_and_recognize is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "detect_and_recognize_detect_and_recognize,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.125300,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=7674,HLS_SYN_LUT=17720,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv16_64 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001100100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_258 : STD_LOGIC_VECTOR (9 downto 0) := "1001011000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal result : STD_LOGIC_VECTOR (7 downto 0);
    signal result_ap_vld : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln146_1_fu_198_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln146_1_reg_282 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln146_fu_203_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln146_reg_287 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln146_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln146_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_idle : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_ready : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_EN_A : STD_LOGIC;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out_ap_vld : STD_LOGIC;
    signal grp_flood_fill_fu_144_ap_start : STD_LOGIC;
    signal grp_flood_fill_fu_144_ap_done : STD_LOGIC;
    signal grp_flood_fill_fu_144_ap_idle : STD_LOGIC;
    signal grp_flood_fill_fu_144_ap_ready : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_0_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_0_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_0_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_0_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_1_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_1_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_1_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_1_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_2_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_2_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_2_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_2_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_3_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_3_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_3_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_3_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_4_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_4_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_4_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_4_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_5_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_5_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_5_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_5_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_6_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_6_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_6_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_6_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_frame_7_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flood_fill_fu_144_frame_7_EN_A : STD_LOGIC;
    signal grp_flood_fill_fu_144_frame_7_WEN_A : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_flood_fill_fu_144_frame_7_Din_A : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_flood_fill_fu_144_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recognize_character_fu_166_ap_start : STD_LOGIC;
    signal grp_recognize_character_fu_166_ap_done : STD_LOGIC;
    signal grp_recognize_character_fu_166_ap_idle : STD_LOGIC;
    signal grp_recognize_character_fu_166_ap_ready : STD_LOGIC;
    signal grp_recognize_character_fu_166_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal cleanup_dest_slot_0_i_reg_109 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal x_loc_fu_98 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_flood_fill_fu_144_ap_start_reg : STD_LOGIC := '0';
    signal grp_recognize_character_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_cond_i_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal phi_mul3_fu_86 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal y_fu_90 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal blob_prefix_sum_0_fu_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component detect_and_recognize_detect_and_recognize_Pipeline_VITIS_LOOP_147_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        phi_mul3 : IN STD_LOGIC_VECTOR (15 downto 0);
        frame_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_0_EN_A : OUT STD_LOGIC;
        frame_0_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_0_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_0_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_1_EN_A : OUT STD_LOGIC;
        frame_1_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_1_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_1_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_2_EN_A : OUT STD_LOGIC;
        frame_2_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_2_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_2_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_3_EN_A : OUT STD_LOGIC;
        frame_3_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_3_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_3_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_4_EN_A : OUT STD_LOGIC;
        frame_4_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_4_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_4_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_5_EN_A : OUT STD_LOGIC;
        frame_5_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_5_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_5_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_6_EN_A : OUT STD_LOGIC;
        frame_6_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_6_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_6_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_7_EN_A : OUT STD_LOGIC;
        frame_7_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_7_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_7_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        x_out : OUT STD_LOGIC_VECTOR (9 downto 0);
        x_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component detect_and_recognize_flood_fill IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        frame_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_0_EN_A : OUT STD_LOGIC;
        frame_0_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_0_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_0_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_1_EN_A : OUT STD_LOGIC;
        frame_1_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_1_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_1_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_2_EN_A : OUT STD_LOGIC;
        frame_2_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_2_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_2_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_3_EN_A : OUT STD_LOGIC;
        frame_3_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_3_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_3_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_4_EN_A : OUT STD_LOGIC;
        frame_4_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_4_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_4_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_5_EN_A : OUT STD_LOGIC;
        frame_5_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_5_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_5_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_6_EN_A : OUT STD_LOGIC;
        frame_6_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_6_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_6_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        frame_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_7_EN_A : OUT STD_LOGIC;
        frame_7_WEN_A : OUT STD_LOGIC_VECTOR (0 downto 0);
        frame_7_Din_A : OUT STD_LOGIC_VECTOR (7 downto 0);
        frame_7_Dout_A : IN STD_LOGIC_VECTOR (7 downto 0);
        start_x : IN STD_LOGIC_VECTOR (9 downto 0);
        start_y : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detect_and_recognize_recognize_character IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        blob_prefix_sum_val : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component detect_and_recognize_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        result : IN STD_LOGIC_VECTOR (7 downto 0);
        result_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122 : component detect_and_recognize_detect_and_recognize_Pipeline_VITIS_LOOP_147_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start,
        ap_done => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done,
        ap_idle => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_idle,
        ap_ready => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_ready,
        phi_mul3 => phi_mul3_fu_86,
        frame_0_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Addr_A,
        frame_0_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_EN_A,
        frame_0_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_WEN_A,
        frame_0_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Din_A,
        frame_0_Dout_A => frame_0_Dout_A,
        frame_1_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Addr_A,
        frame_1_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_EN_A,
        frame_1_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_WEN_A,
        frame_1_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Din_A,
        frame_1_Dout_A => frame_1_Dout_A,
        frame_2_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Addr_A,
        frame_2_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_EN_A,
        frame_2_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_WEN_A,
        frame_2_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Din_A,
        frame_2_Dout_A => frame_2_Dout_A,
        frame_3_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Addr_A,
        frame_3_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_EN_A,
        frame_3_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_WEN_A,
        frame_3_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Din_A,
        frame_3_Dout_A => frame_3_Dout_A,
        frame_4_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Addr_A,
        frame_4_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_EN_A,
        frame_4_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_WEN_A,
        frame_4_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Din_A,
        frame_4_Dout_A => frame_4_Dout_A,
        frame_5_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Addr_A,
        frame_5_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_EN_A,
        frame_5_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_WEN_A,
        frame_5_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Din_A,
        frame_5_Dout_A => frame_5_Dout_A,
        frame_6_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Addr_A,
        frame_6_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_EN_A,
        frame_6_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_WEN_A,
        frame_6_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Din_A,
        frame_6_Dout_A => frame_6_Dout_A,
        frame_7_Addr_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Addr_A,
        frame_7_EN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_EN_A,
        frame_7_WEN_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_WEN_A,
        frame_7_Din_A => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Din_A,
        frame_7_Dout_A => frame_7_Dout_A,
        x_out => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out,
        x_out_ap_vld => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out_ap_vld,
        ap_return => grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_return);

    grp_flood_fill_fu_144 : component detect_and_recognize_flood_fill
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_flood_fill_fu_144_ap_start,
        ap_done => grp_flood_fill_fu_144_ap_done,
        ap_idle => grp_flood_fill_fu_144_ap_idle,
        ap_ready => grp_flood_fill_fu_144_ap_ready,
        frame_0_Addr_A => grp_flood_fill_fu_144_frame_0_Addr_A,
        frame_0_EN_A => grp_flood_fill_fu_144_frame_0_EN_A,
        frame_0_WEN_A => grp_flood_fill_fu_144_frame_0_WEN_A,
        frame_0_Din_A => grp_flood_fill_fu_144_frame_0_Din_A,
        frame_0_Dout_A => frame_0_Dout_A,
        frame_1_Addr_A => grp_flood_fill_fu_144_frame_1_Addr_A,
        frame_1_EN_A => grp_flood_fill_fu_144_frame_1_EN_A,
        frame_1_WEN_A => grp_flood_fill_fu_144_frame_1_WEN_A,
        frame_1_Din_A => grp_flood_fill_fu_144_frame_1_Din_A,
        frame_1_Dout_A => frame_1_Dout_A,
        frame_2_Addr_A => grp_flood_fill_fu_144_frame_2_Addr_A,
        frame_2_EN_A => grp_flood_fill_fu_144_frame_2_EN_A,
        frame_2_WEN_A => grp_flood_fill_fu_144_frame_2_WEN_A,
        frame_2_Din_A => grp_flood_fill_fu_144_frame_2_Din_A,
        frame_2_Dout_A => frame_2_Dout_A,
        frame_3_Addr_A => grp_flood_fill_fu_144_frame_3_Addr_A,
        frame_3_EN_A => grp_flood_fill_fu_144_frame_3_EN_A,
        frame_3_WEN_A => grp_flood_fill_fu_144_frame_3_WEN_A,
        frame_3_Din_A => grp_flood_fill_fu_144_frame_3_Din_A,
        frame_3_Dout_A => frame_3_Dout_A,
        frame_4_Addr_A => grp_flood_fill_fu_144_frame_4_Addr_A,
        frame_4_EN_A => grp_flood_fill_fu_144_frame_4_EN_A,
        frame_4_WEN_A => grp_flood_fill_fu_144_frame_4_WEN_A,
        frame_4_Din_A => grp_flood_fill_fu_144_frame_4_Din_A,
        frame_4_Dout_A => frame_4_Dout_A,
        frame_5_Addr_A => grp_flood_fill_fu_144_frame_5_Addr_A,
        frame_5_EN_A => grp_flood_fill_fu_144_frame_5_EN_A,
        frame_5_WEN_A => grp_flood_fill_fu_144_frame_5_WEN_A,
        frame_5_Din_A => grp_flood_fill_fu_144_frame_5_Din_A,
        frame_5_Dout_A => frame_5_Dout_A,
        frame_6_Addr_A => grp_flood_fill_fu_144_frame_6_Addr_A,
        frame_6_EN_A => grp_flood_fill_fu_144_frame_6_EN_A,
        frame_6_WEN_A => grp_flood_fill_fu_144_frame_6_WEN_A,
        frame_6_Din_A => grp_flood_fill_fu_144_frame_6_Din_A,
        frame_6_Dout_A => frame_6_Dout_A,
        frame_7_Addr_A => grp_flood_fill_fu_144_frame_7_Addr_A,
        frame_7_EN_A => grp_flood_fill_fu_144_frame_7_EN_A,
        frame_7_WEN_A => grp_flood_fill_fu_144_frame_7_WEN_A,
        frame_7_Din_A => grp_flood_fill_fu_144_frame_7_Din_A,
        frame_7_Dout_A => frame_7_Dout_A,
        start_x => x_loc_fu_98,
        start_y => y_fu_90,
        ap_return => grp_flood_fill_fu_144_ap_return);

    grp_recognize_character_fu_166 : component detect_and_recognize_recognize_character
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_recognize_character_fu_166_ap_start,
        ap_done => grp_recognize_character_fu_166_ap_done,
        ap_idle => grp_recognize_character_fu_166_ap_idle,
        ap_ready => grp_recognize_character_fu_166_ap_ready,
        blob_prefix_sum_val => blob_prefix_sum_0_fu_94,
        ap_return => grp_recognize_character_fu_166_ap_return);

    control_s_axi_U : component detect_and_recognize_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        result => result,
        result_ap_vld => result_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_ready = ap_const_logic_1)) then 
                    grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_flood_fill_fu_144_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_flood_fill_fu_144_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
                    grp_flood_fill_fu_144_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_flood_fill_fu_144_ap_ready = ap_const_logic_1)) then 
                    grp_flood_fill_fu_144_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_recognize_character_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_recognize_character_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if (((or_cond_i_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_recognize_character_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_recognize_character_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_recognize_character_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blob_prefix_sum_0_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                blob_prefix_sum_0_fu_94 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
                blob_prefix_sum_0_fu_94 <= grp_flood_fill_fu_144_ap_return;
            end if; 
        end if;
    end process;

    cleanup_dest_slot_0_i_reg_109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (targetBlock_reg_275 = ap_const_lv1_1))) then 
                cleanup_dest_slot_0_i_reg_109 <= ap_const_lv1_1;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
                cleanup_dest_slot_0_i_reg_109 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_mul3_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul3_fu_86 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_mul3_fu_86 <= add_ln146_1_reg_282;
            end if; 
        end if;
    end process;

    y_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y_fu_90 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                y_fu_90 <= add_ln146_reg_287;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln146_1_reg_282 <= add_ln146_1_fu_198_p2;
                add_ln146_reg_287 <= add_ln146_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln146_reg_296 <= icmp_ln146_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                targetBlock_reg_275 <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out_ap_vld = ap_const_logic_1))) then
                x_loc_fu_98 <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_x_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done, grp_recognize_character_fu_166_ap_done, ap_block_state5_on_subcall_done, ap_CS_fsm_state6, or_cond_i_fu_231_p2, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((or_cond_i_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_recognize_character_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln146_1_fu_198_p2 <= std_logic_vector(unsigned(phi_mul3_fu_86) + unsigned(ap_const_lv16_64));
    add_ln146_fu_203_p2 <= std_logic_vector(unsigned(y_fu_90) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done)
    begin
        if ((grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_recognize_character_fu_166_ap_done)
    begin
        if ((grp_recognize_character_fu_166_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(targetBlock_reg_275, grp_flood_fill_fu_144_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_flood_fill_fu_144_ap_done = ap_const_logic_0) and (targetBlock_reg_275 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(grp_recognize_character_fu_166_ap_done, ap_CS_fsm_state7)
    begin
        if (((grp_recognize_character_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_recognize_character_fu_166_ap_done, ap_CS_fsm_state7)
    begin
        if (((grp_recognize_character_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    frame_0_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Addr_A, grp_flood_fill_fu_144_frame_0_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_0_Addr_A <= grp_flood_fill_fu_144_frame_0_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_0_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_Addr_A;
        else 
            frame_0_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_0_Clk_A <= ap_clk;
    frame_0_Din_A <= ap_const_lv8_0;

    frame_0_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_EN_A, grp_flood_fill_fu_144_frame_0_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_0_EN_A <= grp_flood_fill_fu_144_frame_0_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_0_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_0_EN_A;
        else 
            frame_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_0_Rst_A <= ap_rst_n_inv;
    frame_0_WEN_A <= ap_const_lv1_0;

    frame_1_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Addr_A, grp_flood_fill_fu_144_frame_1_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_1_Addr_A <= grp_flood_fill_fu_144_frame_1_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_1_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_Addr_A;
        else 
            frame_1_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_1_Clk_A <= ap_clk;
    frame_1_Din_A <= ap_const_lv8_0;

    frame_1_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_EN_A, grp_flood_fill_fu_144_frame_1_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_1_EN_A <= grp_flood_fill_fu_144_frame_1_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_1_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_1_EN_A;
        else 
            frame_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_1_Rst_A <= ap_rst_n_inv;
    frame_1_WEN_A <= ap_const_lv1_0;

    frame_2_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Addr_A, grp_flood_fill_fu_144_frame_2_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_2_Addr_A <= grp_flood_fill_fu_144_frame_2_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_2_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_Addr_A;
        else 
            frame_2_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_2_Clk_A <= ap_clk;
    frame_2_Din_A <= ap_const_lv8_0;

    frame_2_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_EN_A, grp_flood_fill_fu_144_frame_2_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_2_EN_A <= grp_flood_fill_fu_144_frame_2_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_2_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_2_EN_A;
        else 
            frame_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_2_Rst_A <= ap_rst_n_inv;
    frame_2_WEN_A <= ap_const_lv1_0;

    frame_3_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Addr_A, grp_flood_fill_fu_144_frame_3_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_3_Addr_A <= grp_flood_fill_fu_144_frame_3_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_3_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_Addr_A;
        else 
            frame_3_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_3_Clk_A <= ap_clk;
    frame_3_Din_A <= ap_const_lv8_0;

    frame_3_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_EN_A, grp_flood_fill_fu_144_frame_3_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_3_EN_A <= grp_flood_fill_fu_144_frame_3_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_3_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_3_EN_A;
        else 
            frame_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_3_Rst_A <= ap_rst_n_inv;
    frame_3_WEN_A <= ap_const_lv1_0;

    frame_4_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Addr_A, grp_flood_fill_fu_144_frame_4_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_4_Addr_A <= grp_flood_fill_fu_144_frame_4_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_4_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_Addr_A;
        else 
            frame_4_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_4_Clk_A <= ap_clk;
    frame_4_Din_A <= ap_const_lv8_0;

    frame_4_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_EN_A, grp_flood_fill_fu_144_frame_4_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_4_EN_A <= grp_flood_fill_fu_144_frame_4_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_4_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_4_EN_A;
        else 
            frame_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_4_Rst_A <= ap_rst_n_inv;
    frame_4_WEN_A <= ap_const_lv1_0;

    frame_5_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Addr_A, grp_flood_fill_fu_144_frame_5_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_5_Addr_A <= grp_flood_fill_fu_144_frame_5_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_5_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_Addr_A;
        else 
            frame_5_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_5_Clk_A <= ap_clk;
    frame_5_Din_A <= ap_const_lv8_0;

    frame_5_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_EN_A, grp_flood_fill_fu_144_frame_5_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_5_EN_A <= grp_flood_fill_fu_144_frame_5_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_5_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_5_EN_A;
        else 
            frame_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_5_Rst_A <= ap_rst_n_inv;
    frame_5_WEN_A <= ap_const_lv1_0;

    frame_6_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Addr_A, grp_flood_fill_fu_144_frame_6_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_6_Addr_A <= grp_flood_fill_fu_144_frame_6_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_6_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_Addr_A;
        else 
            frame_6_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_6_Clk_A <= ap_clk;
    frame_6_Din_A <= ap_const_lv8_0;

    frame_6_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_EN_A, grp_flood_fill_fu_144_frame_6_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_6_EN_A <= grp_flood_fill_fu_144_frame_6_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_6_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_6_EN_A;
        else 
            frame_6_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_6_Rst_A <= ap_rst_n_inv;
    frame_6_WEN_A <= ap_const_lv1_0;

    frame_7_Addr_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Addr_A, grp_flood_fill_fu_144_frame_7_Addr_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_7_Addr_A <= grp_flood_fill_fu_144_frame_7_Addr_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_7_Addr_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_Addr_A;
        else 
            frame_7_Addr_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    frame_7_Clk_A <= ap_clk;
    frame_7_Din_A <= ap_const_lv8_0;

    frame_7_EN_A_assign_proc : process(targetBlock_reg_275, ap_CS_fsm_state3, ap_CS_fsm_state5, grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_EN_A, grp_flood_fill_fu_144_frame_7_EN_A)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (targetBlock_reg_275 = ap_const_lv1_0))) then 
            frame_7_EN_A <= grp_flood_fill_fu_144_frame_7_EN_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            frame_7_EN_A <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_frame_7_EN_A;
        else 
            frame_7_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    frame_7_Rst_A <= ap_rst_n_inv;
    frame_7_WEN_A <= ap_const_lv1_0;
    grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start <= grp_detect_and_recognize_Pipeline_VITIS_LOOP_147_2_fu_122_ap_start_reg;
    grp_flood_fill_fu_144_ap_start <= grp_flood_fill_fu_144_ap_start_reg;
    grp_recognize_character_fu_166_ap_start <= grp_recognize_character_fu_166_ap_start_reg;
    icmp_ln146_fu_218_p2 <= "1" when (unsigned(add_ln146_reg_287) < unsigned(ap_const_lv10_258)) else "0";
    or_cond_i_fu_231_p2 <= (icmp_ln146_reg_296 and cleanup_dest_slot_0_i_reg_109);
    result <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_recognize_character_fu_166_ap_return),8));

    result_ap_vld_assign_proc : process(grp_recognize_character_fu_166_ap_done, ap_CS_fsm_state7)
    begin
        if (((grp_recognize_character_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            result_ap_vld <= ap_const_logic_1;
        else 
            result_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
