

================================================================
== Vitis HLS Report for 'recognize_character'
================================================================
* Date:           Mon May  5 05:08:27 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        hls_design_output
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.125 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        1|       20|  10.000 ns|  0.200 us|    1|   20|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_9_1  |        4|       17|         3|          -|          -|  1 ~ 5|        no|
        +------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 5 2 
2 --> 3 
3 --> 4 
4 --> 2 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.25>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specpipeline_ln25 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_10" [src/hls_recognizer.cpp:25]   --->   Operation 6 'specpipeline' 'specpipeline_ln25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%blob_prefix_sum_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %blob_prefix_sum_val" [src/hls_recognizer.cpp:29]   --->   Operation 7 'read' 'blob_prefix_sum_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (2.55ns)   --->   "%icmp_ln29 = icmp_eq  i32 %blob_prefix_sum_val_read, i32 0" [src/hls_recognizer.cpp:29]   --->   Operation 8 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (1.70ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %while.body.i.preheader, void %return" [src/hls_recognizer.cpp:29]   --->   Operation 9 'br' 'br_ln29' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%left = alloca i32 1" [src/hls_recognizer.cpp:6->src/hls_recognizer.cpp:35]   --->   Operation 10 'alloca' 'left' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%right = alloca i32 1" [src/hls_recognizer.cpp:7->src/hls_recognizer.cpp:35]   --->   Operation 11 'alloca' 'right' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln7 = store i8 26, i8 %right" [src/hls_recognizer.cpp:7->src/hls_recognizer.cpp:35]   --->   Operation 12 'store' 'store_ln7' <Predicate = (!icmp_ln29)> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln6 = store i8 0, i8 %left" [src/hls_recognizer.cpp:6->src/hls_recognizer.cpp:35]   --->   Operation 13 'store' 'store_ln6' <Predicate = (!icmp_ln29)> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln11 = br void %while.body.i" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 14 'br' 'br_ln11' <Predicate = (!icmp_ln29)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.23>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%left_3 = load i8 %left" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 15 'load' 'left_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%right_3 = load i8 %right" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 16 'load' 'right_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i8 %left_3" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 17 'zext' 'zext_ln11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln11_1 = zext i8 %right_3" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 18 'zext' 'zext_ln11_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.91ns)   --->   "%add_ln11 = add i9 %zext_ln11, i9 %zext_ln11_1" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 19 'add' 'add_ln11' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i8 @_ssdm_op_PartSelect.i8.i9.i32.i32, i9 %add_ln11, i32 1, i32 8" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 20 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %trunc_ln" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 21 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%char_prefix_sums_addr = getelementptr i9 %char_prefix_sums, i64 0, i64 %zext_ln13" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 22 'getelementptr' 'char_prefix_sums_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (2.32ns)   --->   "%char_prefix_sums_load = load i5 %char_prefix_sums_addr" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 23 'load' 'char_prefix_sums_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 27> <ROM>

State 3 <SV = 2> <Delay = 6.46>
ST_3 : Operation 24 [1/2] ( I:2.32ns O:2.32ns )   --->   "%char_prefix_sums_load = load i5 %char_prefix_sums_addr" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 24 'load' 'char_prefix_sums_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 9> <Depth = 27> <ROM>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i9 %char_prefix_sums_load" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 25 'zext' 'zext_ln13_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (2.55ns)   --->   "%icmp_ln13 = icmp_eq  i32 %zext_ln13_1, i32 %blob_prefix_sum_val_read" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 26 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (1.58ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %if.else.i, void %_Z16find_exact_matchi.exit" [src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35]   --->   Operation 27 'br' 'br_ln13' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 28 [1/1] (2.55ns)   --->   "%icmp_ln15 = icmp_slt  i32 %zext_ln13_1, i32 %blob_prefix_sum_val_read" [src/hls_recognizer.cpp:15->src/hls_recognizer.cpp:35]   --->   Operation 28 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln13)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (1.91ns)   --->   "%left_4 = add i8 %trunc_ln, i8 1" [src/hls_recognizer.cpp:16->src/hls_recognizer.cpp:35]   --->   Operation 29 'add' 'left_4' <Predicate = (!icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (1.91ns)   --->   "%right_4 = add i8 %trunc_ln, i8 255" [src/hls_recognizer.cpp:18->src/hls_recognizer.cpp:35]   --->   Operation 30 'add' 'right_4' <Predicate = (!icmp_ln13)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.24ns)   --->   "%left_5 = select i1 %icmp_ln15, i8 %left_4, i8 %left_3" [src/hls_recognizer.cpp:15->src/hls_recognizer.cpp:35]   --->   Operation 31 'select' 'left_5' <Predicate = (!icmp_ln13)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (1.24ns)   --->   "%right_5 = select i1 %icmp_ln15, i8 %right_3, i8 %right_4" [src/hls_recognizer.cpp:15->src/hls_recognizer.cpp:35]   --->   Operation 32 'select' 'right_5' <Predicate = (!icmp_ln13)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.12>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%speclooptripcount_ln10 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 5, i64 3" [src/hls_recognizer.cpp:10->src/hls_recognizer.cpp:35]   --->   Operation 33 'speclooptripcount' 'speclooptripcount_ln10' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%specloopname_ln9 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [src/hls_recognizer.cpp:9->src/hls_recognizer.cpp:35]   --->   Operation 34 'specloopname' 'specloopname_ln9' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (1.91ns)   --->   "%icmp_ln9 = icmp_ugt  i8 %left_5, i8 %right_5" [src/hls_recognizer.cpp:9->src/hls_recognizer.cpp:35]   --->   Operation 35 'icmp' 'icmp_ln9' <Predicate = (!icmp_ln13)> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln7 = store i8 %right_5, i8 %right" [src/hls_recognizer.cpp:7->src/hls_recognizer.cpp:35]   --->   Operation 36 'store' 'store_ln7' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_4 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln6 = store i8 %left_5, i8 %left" [src/hls_recognizer.cpp:6->src/hls_recognizer.cpp:35]   --->   Operation 37 'store' 'store_ln6' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_4 : Operation 38 [1/1] (1.58ns)   --->   "%br_ln9 = br i1 %icmp_ln9, void %while.body.i, void %_Z16find_exact_matchi.exit" [src/hls_recognizer.cpp:9->src/hls_recognizer.cpp:35]   --->   Operation 38 'br' 'br_ln9' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%mid = phi i8 %trunc_ln, void %while.body.i, i8 27, void %if.else.i" [src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35]   --->   Operation 39 'phi' 'mid' <Predicate = (icmp_ln9) | (icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.91ns)   --->   "%icmp_ln36 = icmp_ult  i8 %mid, i8 27" [src/hls_recognizer.cpp:36]   --->   Operation 40 'icmp' 'icmp_ln36' <Predicate = (icmp_ln9) | (icmp_ln13)> <Delay = 1.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (1.70ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %return, void %if.then2" [src/hls_recognizer.cpp:36]   --->   Operation 41 'br' 'br_ln36' <Predicate = (icmp_ln9) | (icmp_ln13)> <Delay = 1.70>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i8 %mid" [src/hls_recognizer.cpp:37]   --->   Operation 42 'zext' 'zext_ln37' <Predicate = (icmp_ln9 & icmp_ln36) | (icmp_ln13 & icmp_ln36)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%prefix_sum_to_char_addr = getelementptr i7 %prefix_sum_to_char, i64 0, i64 %zext_ln37" [src/hls_recognizer.cpp:37]   --->   Operation 43 'getelementptr' 'prefix_sum_to_char_addr' <Predicate = (icmp_ln9 & icmp_ln36) | (icmp_ln13 & icmp_ln36)> <Delay = 0.00>
ST_4 : Operation 44 [2/2] (2.32ns)   --->   "%prefix_sum_to_char_load = load i5 %prefix_sum_to_char_addr" [src/hls_recognizer.cpp:37]   --->   Operation 44 'load' 'prefix_sum_to_char_load' <Predicate = (icmp_ln9 & icmp_ln36) | (icmp_ln13 & icmp_ln36)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 27> <ROM>

State 5 <SV = 4> <Delay = 4.02>
ST_5 : Operation 45 [1/2] ( I:2.32ns O:2.32ns )   --->   "%prefix_sum_to_char_load = load i5 %prefix_sum_to_char_addr" [src/hls_recognizer.cpp:37]   --->   Operation 45 'load' 'prefix_sum_to_char_load' <Predicate = (!icmp_ln29 & icmp_ln36)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 7> <Depth = 27> <ROM>
ST_5 : Operation 46 [1/1] (1.70ns)   --->   "%br_ln38 = br void %return" [src/hls_recognizer.cpp:38]   --->   Operation 46 'br' 'br_ln38' <Predicate = (!icmp_ln29 & icmp_ln36)> <Delay = 1.70>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%result_write_assign = phi i7 %prefix_sum_to_char_load, void %if.then2, i7 95, void %entry, i7 63, void %_Z16find_exact_matchi.exit" [src/hls_recognizer.cpp:37]   --->   Operation 47 'phi' 'result_write_assign' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln41 = ret i7 %result_write_assign" [src/hls_recognizer.cpp:41]   --->   Operation 48 'ret' 'ret_ln41' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.259ns
The critical path consists of the following:
	wire read operation ('blob_prefix_sum_val_read', src/hls_recognizer.cpp:29) on port 'blob_prefix_sum_val' (src/hls_recognizer.cpp:29) [5]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln29', src/hls_recognizer.cpp:29) [6]  (2.552 ns)
	multiplexor before 'phi' operation 7 bit ('result', src/hls_recognizer.cpp:37) with incoming values : ('prefix_sum_to_char_load', src/hls_recognizer.cpp:37) [49]  (1.707 ns)

 <State 2>: 4.237ns
The critical path consists of the following:
	'load' operation 8 bit ('left', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) on local variable 'left', src/hls_recognizer.cpp:6->src/hls_recognizer.cpp:35 [15]  (0.000 ns)
	'add' operation 9 bit ('add_ln11', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) [19]  (1.915 ns)
	'getelementptr' operation 5 bit ('char_prefix_sums_addr', src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35) [22]  (0.000 ns)
	'load' operation 9 bit ('char_prefix_sums_load', src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35) on array 'char_prefix_sums' [23]  (2.322 ns)

 <State 3>: 6.462ns
The critical path consists of the following:
	'load' operation 9 bit ('char_prefix_sums_load', src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35) on array 'char_prefix_sums' [23]  (2.322 ns)
	'icmp' operation 1 bit ('icmp_ln13', src/hls_recognizer.cpp:13->src/hls_recognizer.cpp:35) [25]  (2.552 ns)
	multiplexor before 'phi' operation 8 bit ('mid', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) with incoming values : ('trunc_ln', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) [40]  (1.588 ns)

 <State 4>: 7.125ns
The critical path consists of the following:
	'icmp' operation 1 bit ('icmp_ln9', src/hls_recognizer.cpp:9->src/hls_recognizer.cpp:35) [35]  (1.915 ns)
	multiplexor before 'phi' operation 8 bit ('mid', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) with incoming values : ('trunc_ln', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) [40]  (1.588 ns)
	'phi' operation 8 bit ('mid', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) with incoming values : ('trunc_ln', src/hls_recognizer.cpp:11->src/hls_recognizer.cpp:35) [40]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln36', src/hls_recognizer.cpp:36) [41]  (1.915 ns)
	multiplexor before 'phi' operation 7 bit ('result', src/hls_recognizer.cpp:37) with incoming values : ('prefix_sum_to_char_load', src/hls_recognizer.cpp:37) [49]  (1.707 ns)

 <State 5>: 4.029ns
The critical path consists of the following:
	'load' operation 7 bit ('prefix_sum_to_char_load', src/hls_recognizer.cpp:37) on array 'prefix_sum_to_char' [46]  (2.322 ns)
	multiplexor before 'phi' operation 7 bit ('result', src/hls_recognizer.cpp:37) with incoming values : ('prefix_sum_to_char_load', src/hls_recognizer.cpp:37) [49]  (1.707 ns)
	'phi' operation 7 bit ('result', src/hls_recognizer.cpp:37) with incoming values : ('prefix_sum_to_char_load', src/hls_recognizer.cpp:37) [49]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
